name: Build and Test

env:
  VERSION: 2.4.0

on:
  workflow_call:
  pull_request:

jobs:
  build:
    name: Build Snap
    runs-on: ubuntu-latest
    outputs:
      snap-file: ${{ steps.build-snap.outputs.snap }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - id: build-snap
        name: Build snap
        uses: snapcore/action-build@v1
        with:
          snapcraft-channel: 7.x/candidate

      - name: Upload built snap job artifact
        uses: actions/upload-artifact@v3
        with:
          name: opensearch_snap_amd64
          path: opensearch_${{env.VERSION}}_amd64.snap

  test:
    name: Test Snap
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Download snap file
        uses: actions/download-artifact@v3
        with:
          name: opensearch_snap_amd64
          path: .

      - name: Install snap file
        run: |
          sudo snap remove --purge opensearch
          sudo snap install opensearch_${{env.VERSION}}_amd64.snap --dangerous --jailmode

      - name: Setup the required system configs
        run: |
          sudo sysctl -w vm.swappiness=0
          sudo sysctl -w vm.max_map_count=262144
          sudo sysctl -w net.ipv4.tcp_retries2=5

      - name: Connect required interfaces
        run: |
          sudo snap connect opensearch:log-observe
          sudo snap connect opensearch:mount-observe
          sudo snap connect opensearch:process-control
          sudo snap connect opensearch:system-observe
          sudo snap connect opensearch:sys-fs-cgroup-service

      - name: Setup and Start OpenSearch
        run: |
          # create the certificates
          sudo snap run opensearch.setup \
              --node-name cm0 \
              --node-roles cluster_manager,data \
              --tls-root-password root1234 \
              --tls-admin-password admin1234 \
              --tls-node-password node1234 \
              --tls-init-setup yes                 # this creates the root and admin certs as well.

          # start opensearch
          sudo snap start opensearch.daemon

          # wait a bit for it to fully initialize
          sleep 15s

          # create the security index
          sudo snap run opensearch.security-init --admin-password=admin1234

      - name: Setup tmate session
        if: ${{ failure() }}
        uses: mxschmitt/action-tmate@v3

      - name: Ensure the cluster is reachable and node created
        run: |
          sudo snap install yq

          # Check node name
          cluster_resp=$(curl -k -XGET https://localhost:9200 -u 'admin:admin')
          echo -e "Cluster Response: \n ${cluster_resp}"
          node_name=$(echo "${cluster_resp}" | yq -r .name)
          if [ "${node_name}" != "cm0" ]; then
              exit 1
          fi

          # Check cluster health
          health_resp=$(curl -k -XGET https://localhost:9200/_cluster/health -u 'admin:admin')
          echo -e "Cluster Health Response: \n ${health_resp}"
          cluster_status=$(echo "${health_resp}" | yq -r .status)
          if [ "${cluster_status}" != "green" ]; then
              exit 1
          fi
