name: Build OpenSearch from source and run tests

env:
  VERSION: 2.3.0
  RELEASE: edge

on:
  push:
    branches:
      - edge

jobs:
  build:
    name: Build Snap
    runs-on: ubuntu-latest
    outputs:
      snap-file: ${{ steps.build-snap.outputs.snap }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          ref: edge

      - id: build-snap
        name: Build snap
        uses: snapcore/action-build@v1
        with:
          snapcraft-channel: 7.x/candidate

      - name: Upload built snap job artifact
        uses: actions/upload-artifact@v3
        with:
          name: opensearch_snap_amd64
          path: opensearch_${{env.VERSION}}_amd64.snap

  test:
    name: Test Snap
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Download snap file
        uses: actions/download-artifact@v3
        with:
          name: opensearch_snap_amd64
          path: .

      - name: Install snap file
        run: |
          sudo snap install opensearch_${{env.VERSION}}_amd64.snap --dangerous

      - name: Setup and Start OpenSearch
        run: |
          # connect interfaces
          sudo snap connect opensearch:log-observe
          sudo snap connect opensearch:mount-observe
          sudo snap connect opensearch:process-control
          sudo snap connect opensearch:system-observe
          sudo snap connect opensearch:cgroup-service-read
          
          # create the certificates
          sudo snap run opensearch.setup \
              --node-name cm0 \
              --node-roles cluster_manager,data \
              --tls-root-password root1234 \
              --tls-admin-password admin1234 \
              --tls-node-password node1234 \
              --tls-init-setup yes                 # this creates the root and admin certs as well.
          
          # system configs required by opensearch, can set one of the following ways:
          sysctl -w vm.max_map_count=262144
          
          # start opensearch
          sudo snap start opensearch.daemon
          
          # wait a bit for it to fully initialize
          sleep 5s
          
          # create the security index
          sudo snap run opensearch.security-init --admin-password=admin1234

      - name: Ensure the cluster is reachable and node created
        run: |
          sudo snap install yq
          
          # Check node name
          cluster_resp=$(curl -k -XGET https://localhost:9200 -u 'admin:admin')
          echo -e "Cluster Response: \n ${cluster_resp}"
          node_name=$(echo "${cluster_resp}" | yq -r .name)
          if [ "${node_name}" != "cm0" ]; then
              exit 1
          fi
          
          # Check cluster health
          health_resp=$(curl -k -XGET https://localhost:9200/_cluster/health -u 'admin:admin')
          echo -e "Cluster Health Response: \n ${health_resp}"
          cluster_status=$(echo "${health_resp}" | yq -r .status)
          if [ "${cluster_status}" != "green" ]; then
              exit 1
          fi

  publish:
    name: publish
    runs-on: ubuntu-latest
    needs:
      - test
    steps:
      - name: Download snap file
        uses: actions/download-artifact@v3
        with:
          name: opensearch_snap_amd64
          path: .

      - name: Publish snap to Store
        uses: snapcore/action-publish@v1
        env:
          SNAPCRAFT_STORE_CREDENTIALS: ${{ secrets.STORE_LOGIN }}
        with:
          snap: opensearch_${{env.VERSION}}_amd64.snap
          release: ${{env.RELEASE}}
