name: opensearch # you probably want to 'snapcraft register <name>'
base: core22 # the base snap is the execution environment for this snap

version: '2.9.0' # just for humans, typically '1.2+git' or '1.3.2'

summary: 'OpenSearch: community-driven, Apache 2.0-licensed search and analytics suite.'
description: |
    OpenSearch is a community-driven, Apache 2.0-licensed open source search and 
    analytics suite that makes it easy to ingest, search, visualize, and analyze data. 
    Developers build with OpenSearch for use cases such as application search, 
    log analytics, data observability, data ingestion, and more.

grade: stable # must be 'stable' to release into candidate/stable channels

confinement: strict # use 'strict' once you have the right plugs and slots

architectures:
  - build-on: amd64


system-usernames:
  snap_daemon: shared


plugs:
  shmem-perf-analyzer:
    interface: shared-memory
    private: true
  sys-fs-cgroup-service:
    interface: system-files
    read:
      - /sys/fs/cgroup/system.slice/snap.opensearch.daemon.service

hooks:
  install:
    plugs:
      - network
      - network-bind
      - shmem-perf-analyzer
    environment:
      OPS_ROOT: ${SNAP}/ops

  configure:
    environment:
      OPS_ROOT: ${SNAP}/ops


environment:
  SNAP_LOG_DIR: ${SNAP_COMMON}/ops/snap/logs

  OPENSEARCH_HOME: ${SNAP_DATA}
  OPENSEARCH_JAVA_HOME: ${SNAP_DATA}/jdk
  OPENSEARCH_PATH_CONF: ${SNAP_DATA}/config
  OPENSEARCH_TMPDIR: ${SNAP_COMMON}/tmp
  OPENSEARCH_PLUGINS: ${SNAP_DATA}/plugins

  KNN_LIB_DIR: ${OPENSEARCH_PLUGINS}/opensearch-knn/lib

apps:
  daemon:
    daemon: simple
    install-mode: disable
    command: ops/start.sh
    restart-condition: always
    restart-delay: 20s
    # reload-command: ops/start.sh
    plugs:
      - network
      - network-bind
      - log-observe
      - mount-observe
      - process-control
      - shmem-perf-analyzer
      - system-observe
      - sys-fs-cgroup-service
    environment:
      OPS_ROOT: ${SNAP}/ops
      OPENSEARCH_PATH_CERTS: ${OPENSEARCH_PATH_CONF}/certificates
      LD_LIBRARY_PATH: "${LD_LIBRARY_PATH}:${KNN_LIB_DIR}"

  security-init:
    command: ops/security-init.sh
    plugs:
      - network
      - network-bind
    environment:
      OPS_ROOT: ${SNAP}/ops
      OPENSEARCH_PATH_CERTS: ${OPENSEARCH_PATH_CONF}/certificates
      JAVA_OPTS: ""

  setup:
    command: ops/setup.sh
    environment:
      OPS_ROOT: ${SNAP}/ops
      OPENSEARCH_PATH_CERTS: ${OPENSEARCH_PATH_CONF}/certificates

  set-conf-value:
    command: ops/change-conf.sh
    environment:
      OPS_ROOT: ${SNAP}/ops

  plugin-add:
    command: ops/plugins/add.sh

  plugins-list:
    command: ops/plugins/list.sh

  plugins-remove:
    command: ops/plugins/remove.sh

  test-cluster-health-green:
    command: ops/tests/test-cluster-health-green.sh
    plugs:
      - network
      - network-bind

  test-node-up:
    command: ops/tests/test-node-up.sh
    plugs:
      - network
      - network-bind

  test-security-index-created:
    command: ops/tests/test-security-index-created.sh
    plugs:
      - network
      - network-bind

parts:
  dependencies:
    plugin: nil
    stage-snaps:
      - yq
    stage-packages:
      - util-linux
      - curl
      - procps
      - libfreetype6
      - libpng16-16
      - libxrender1
      - libx11-6
      - libxext6
      - libxi6
      - libxtst6
      - libpsm-infinipath1
      - libboost-all-dev
      - libasound2
      - libpsm2-2-compat
      - libcrypt1
      - libexpat1
      - zlib1g

  wrapper-scripts:
    plugin: nil
    source: ./scripts
    source-type: local
    override-build: |
      target_dir="${CRAFT_PART_INSTALL}/ops"
      
      rm -rf "${target_dir}"
      
      cp -r wrappers/. "${target_dir}"
      cp -r helpers/ "${target_dir}/helpers"

  opensearch:
    plugin: nil
    override-build: |
        version="$(craftctl get version)"
        archive="opensearch-${version}-linux-x64.tar.gz"
      
        curl -o "${archive}" "https://artifacts.opensearch.org/releases/bundle/opensearch/${version}/${archive}"
        tar -xzvf "${archive}" -C "${CRAFT_PART_INSTALL}/" --strip-components=1
      
        rm "${archive}"
      
        
      
#layout:
#  /etc/opensearch/:
#    symlink: ${SNAP_DATA}/config
#  /var/lib/opensearch/:
#    symlink: ${SNAP_DATA}/data
#  /usr/share/opensearch/:
#  /usr/share/opensearch/jdk:
#  /usr/share/opensearch/lib:
#  /usr/share/opensearch/lib:
