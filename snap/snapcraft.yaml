name: opensearch # you probably want to 'snapcraft register <name>'
base: core22 # the base snap is the execution environment for this snap

version: '2.9.0' # just for humans, typically '1.2+git' or '1.3.2'

summary: 'OpenSearch: community-driven, Apache 2.0-licensed search and analytics suite.'
description: |
    OpenSearch is a community-driven, Apache 2.0-licensed open source search and 
    analytics suite that makes it easy to ingest, search, visualize, and analyze data. 
    Developers build with OpenSearch for use cases such as application search, 
    log analytics, data observability, data ingestion, and more.

grade: stable # must be 'stable' to release into candidate/stable channels

confinement: strict # use 'strict' once you have the right plugs and slots

architectures:
  - build-on: amd64


system-usernames:
  snap_daemon: shared


plugs:
  sys-fs-cgroup-service:
    interface: system-files
    read:
      - /sys/fs/cgroup/system.slice/snap.opensearch.daemon.service

hooks:
  install:
    plugs:
      - network
      - network-bind
    environment:
      OPS_ROOT: ${SNAP}/opt/opensearch

  configure:
    environment:
      OPS_ROOT: ${SNAP}/opt/opensearch


environment:
  SNAP_LOG_DIR: ${SNAP_COMMON}/ops/snap/logs

  OPENSEARCH_BIN: ${SNAP}/usr/share/opensearch/bin
  OPENSEARCH_JAVA_HOME: ${SNAP}/usr/share/opensearch/jdk

  OPENSEARCH_HOME: ${SNAP_DATA}/usr/share/opensearch
  OPENSEARCH_LIB: ${OPENSEARCH_HOME}/lib
  OPENSEARCH_PLUGINS: ${OPENSEARCH_HOME}/plugins
  OPENSEARCH_MODULES: ${OPENSEARCH_HOME}/modules

  OPENSEARCH_PATH_CONF: ${SNAP_DATA}/etc/opensearch
  OPENSEARCH_PATH_CERTS: ${SNAP_DATA}/etc/opensearch/certificates

  OPENSEARCH_VARLIB: ${SNAP_COMMON}/var/lib/opensearch
  OPENSEARCH_TMPDIR: ${SNAP_COMMON}/usr/share/tmp
  OPENSEARCH_VARLOG: ${SNAP_COMMON}/var/log/opensearch

  KNN_LIB_DIR: ${OPENSEARCH_PLUGINS}/opensearch-knn/lib

apps:
  daemon:
    daemon: simple
    install-mode: disable
    command: opt/opensearch/start.sh
    restart-condition: always
    restart-delay: 20s
    # reload-command: ${SNAP}/usr/share/ops/start.sh
    plugs:
      - network
      - network-bind
      - log-observe
      - mount-observe
      - process-control
      - system-observe
      - sys-fs-cgroup-service
    environment:
      OPS_ROOT: ${SNAP}/opt/opensearch
      OPENSEARCH_PATH_CERTS: ${OPENSEARCH_PATH_CONF}/certificates
      LD_LIBRARY_PATH: "${LD_LIBRARY_PATH}:${KNN_LIB_DIR}"

  security-init:
    command: opt/opensearch/security-init.sh
    plugs:
      - network
      - network-bind
    environment:
      OPS_ROOT: ${SNAP}/opt/opensearch
      JAVA_OPTS: ""

  setup:
    command: opt/opensearch/setup.sh
    environment:
      OPS_ROOT: ${SNAP}/opt/opensearch

  plugin-add:
    command: opt/opensearch/plugins/add.sh

  plugins-list:
    command: opt/opensearch/plugins/list.sh

  plugins-remove:
    command: opt/opensearch/plugins/remove.sh

  test-cluster-health-green:
    command: opt/opensearch/tests/test-cluster-health-green.sh
    plugs:
      - network
      - network-bind

  test-node-up:
    command: opt/opensearch/tests/test-node-up.sh
    plugs:
      - network
      - network-bind
    environment:
      OPENSEARCH_PATH_CERTS: ${OPENSEARCH_PATH_CONF}/certificates

  test-security-index-created:
    command: opt/opensearch/tests/test-security-index-created.sh
    plugs:
      - network
      - network-bind
    environment:
      OPENSEARCH_PATH_CERTS: ${OPENSEARCH_PATH_CONF}/certificates

parts:
  dependencies:
    plugin: nil
    stage-snaps:
      - yq
    stage-packages:
      - util-linux
      - curl
      - procps
      - libfreetype6
      - libpng16-16
      - libxrender1
      - libx11-6
      - libxext6
      - libxi6
      - libxtst6
      - libpsm-infinipath1
      - libboost-all-dev
      - libasound2
      - libpsm2-2-compat
      - libcrypt1
      - libexpat1
      - zlib1g

  wrapper-scripts:
    plugin: nil
    source: ./scripts
    source-type: local
    override-build: |
      target_dir="${CRAFT_PART_INSTALL}/opt/opensearch"
      mkdir -p "${target_dir}"
      cp -r wrappers/. "${target_dir}"
      cp -r helpers/ "${target_dir}/helpers"

  opensearch:
    plugin: nil
    override-build: |
        version="$(craftctl get version)"
        archive="opensearch-${version}-linux-x64.tar.gz"
      
        curl -o "${archive}" "https://artifacts.opensearch.org/releases/bundle/opensearch/${version}/${archive}"
        tar -xzvf "${archive}" -C "${CRAFT_PART_INSTALL}/" --strip-components=1
      
        mkdir -p "${CRAFT_PART_INSTALL}/usr/share/opensearch"

        mkdir -p "${CRAFT_PART_INSTALL}/etc/opensearch/"
        mv "${CRAFT_PART_INSTALL}"/config/* "${CRAFT_PART_INSTALL}/etc/opensearch/"

        declare -a dirs=(bin jdk lib modules plugins performance-analyzer-rca)
        for dir in "${dirs[@]}"; do
            target_dir="${CRAFT_PART_INSTALL}/usr/share/opensearch/${dir}"
            mv "${CRAFT_PART_INSTALL}/${dir}" "${target_dir}"
        done
        chmod -R 755 "${CRAFT_PART_INSTALL}"/usr/share/opensearch/bin "${CRAFT_PART_INSTALL}"/usr/share/opensearch/jdk

        # It is important to correct the user permissions for the opensearch.keystore file, after the script is executed.
        # Given we know which user is going to be used for the daemon, we can set this correction in the keystore script.
        # TODO: we should perhaps NOT alter the source script - but 
        echo 'chown snap_daemon:root /var/snap/opensearch/current/etc/opensearch/opensearch.keystore || true' >> "${CRAFT_PART_INSTALL}"/usr/share/opensearch/bin/opensearch-keystore

        # Final clean-up
        rm "${archive}"
      
        # TODO do not delete these
        declare -a resources=(LICENSE.txt manifest.yml logs NOTICE.txt opensearch-tar-install.sh README.md config)
        for res in "${resources[@]}"; do
            rm -rf "${CRAFT_PART_INSTALL}/${res}"
        done
