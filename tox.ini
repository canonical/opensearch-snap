# Copyright 2023 Canonical Ltd.
# See LICENSE file for licensing details.

[tox]
no_package = True
skip_missing_interpreters = True
env_list = format, lint, unit
labels =
    # Don't run this group in parallel, or with --keep-models because it creates a lot of local VMs.
    integration = {charm, tls, ha, ha-networking, client, h-scaling, ha-storage}-integration


[vars]
snap_path = {tox_root}/snap/hooks
scripts_path = {tox_root}/scripts
src_path = {[vars]snap_path} {[vars]scripts_path}
tests_path = {tox_root}/tests
all_path = {[vars]src_path} {[vars]tests_path}

[testenv]
allowlist_externals=
    /usr/bin/bash
set_env =
    PYTHONPATH = {tox_root}:{tox_root}/lib:{[vars]src_path}
    PYTHONBREAKPOINT=ipdb.set_trace
    PY_COLORS=1
    OPENSEARCH_JAVA_HOME={env:OPENSEARCH_JAVA_HOME:/snap/opensearch/current/usr/share/opensearch/jdk}
    OPENSEARCH_BIN={env:OPENSEARCH_BIN:/snap/opensearch/current/usr/share/opensearch/bin}
    OPENSEARCH_PATH_CONF={env:OPENSEARCH_PATH_CONF:/var/snap/opensearch/current/etc/opensearch}
    OPENSEARCH_HOME={env:OPENSEARCH_HOME:/var/snap/opensearch/current/usr/share/opensearch}
    OPENSEARCH_LIB={env:OPENSEARCH_LIB:/var/snap/opensearch/current/usr/share/opensearch/lib}
    OPENSEARCH_PATH_CERTS={env:OPENSEARCH_PATH_CERTS:/var/snap/opensearch/current/etc/opensearch/certificates}
pass_env =
    PYTHONPATH
    CHARM_BUILD_DIR
    MODEL_SETTINGS

[testenv:py-format]
description = Apply coding style standards to code
deps =
    black
    isort
commands =
    isort {[vars]all_path}
    black {[vars]all_path}

[testenv:py-lint]
description = Check code against coding style standards
deps =
    black
    flake8==5.0.4
    flake8-docstrings==1.6.0
    flake8-copyright
    flake8-builtins
    pyproject-flake8
    pep8-naming
    isort
commands =
    # pflake8 wrapper supports config from pyproject.toml
    pflake8 {[vars]all_path}
    isort --check-only --diff {[vars]all_path}
    black --check --diff {[vars]all_path}

[testenv:bash-lint]
description = Check code against coding style standards
allowlist_externals=
    /usr/bin/shellcheck
    {tox_root}/tests/lint/check_all_shell_files.sh
commands =
    {tox_root}/tests/lint/check_all_shell_files.sh

[testenv:{snap-setup,check-snap-install}]
allowlist_externals=
    /usr/bin/shellcheck
    {tox_root}/tests/integration/setup_snap.sh
    {tox_root}/tests/integration/check_snap_install.sh
description = Run integration tests
pass_env =
    {[testenv]pass_env}
deps =
    opensearch-py
    -r {tox_root}/requirements.txt
commands =
    snap-setup: {tox_root}/tests/integration/setup_snap.sh -f {tox_root}/snap/snapcraft.yaml
    check-snap-install: {tox_root}/tests/integration/check_snap_install.sh
